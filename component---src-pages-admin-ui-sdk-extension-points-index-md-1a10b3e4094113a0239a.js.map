{"version":3,"file":"component---src-pages-admin-ui-sdk-extension-points-index-md-1a10b3e4094113a0239a.js","mappings":"wSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,gDACH,iDACL,kBAAK,qJACL,kBAAK,QAAM,cAAGC,WAAW,IACrB,KAAQ,0EACL,qCAAyC,wLAChD,eACE,GAAM,mBACH,oBACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,iBAA8B,2IAAyI,uBAAYA,WAAW,KAAM,iBAA8B,+IAA6I,uBAAYA,WAAW,KAAM,iBAA8B,iCACld,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,8HAOP,kBAAK,uCAAqC,uBAAYA,WAAW,KAAM,wBAAqC,iBAAe,uBAAYA,WAAW,KAAM,iBAA8B,6CAA2C,uBAAYA,WAAW,KAAM,eAA4B,uDAAqD,uBAAYA,WAAW,KAAM,4BAAyC,WACrZ,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,8NAUP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,QAAqB,qBAAmB,uBAAYA,WAAW,KAAM,qBAAkC,qDAC/I,eACE,GAAM,gCACH,iCACL,kBAAK,uBAAqB,uBAAYA,WAAW,KAAM,iBAA8B,yBAAuB,uBAAYA,WAAW,KAAM,SAAsB,+CAC/J,eACE,GAAM,+BACH,gCACL,kBAAK,qGACL,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MACN,WACL,eAAIA,WAAW,KACb,MAAS,MACN,kBAGT,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,kBACjC,eAAIA,WAAW,KACb,MAAS,MACN,iFAEP,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,kBACjC,eAAIA,WAAW,KACb,MAAS,MACN,gCAA8B,uBAAYA,WAAW,MAAO,oBAAiC,OAEpG,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,YACjC,eAAIA,WAAW,KACb,MAAS,MACN,2CAAyC,uBAAYA,WAAW,MAAO,oBAAiC,OAE/G,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,mBACjC,eAAIA,WAAW,KACb,MAAS,MACN,uHAEP,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,qBACjC,eAAIA,WAAW,KACb,MAAS,MACN,4BAIX,eACE,GAAM,wBACH,yBACL,kBAAK,oKAEL,eACE,GAAM,oCACH,qCACL,kBAAK,uJAEL,oBACE,eAAIA,WAAW,MAAO,iDACtB,eAAIA,WAAW,MAAO,2CACtB,eAAIA,WAAW,MAAO,cAAY,uBAAYA,WAAW,MAAO,2CAAwD,mHAE1H,kBAAK,uEAAqE,uBAAYA,WAAW,KAAM,4CAAyD,gNAChK,eACE,GAAM,mBACH,oBACL,oBACE,eAAIA,WAAW,MAAO,mFACtB,eAAIA,WAAW,MAAO,oKAI5B,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-extensibility/./src/pages/admin-ui-sdk/extension-points/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobe-commerce-admin-ui-sdk-extension-points\"\n    }}>{`Adobe Commerce Admin UI SDK extension points`}</h1>\n    <p>{`This section describes how to use existing extension points in any Adobe Developer App Builder application that customizes Adobe Commerce Admin.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/adobe-commerce-samples/tree/main/admin-ui-sdk\"\n      }}>{`Adobe Commerce Samples repository`}</a>{` contains samples for different extension points of the Adobe Commerce Admin UI SDK. Use these samples to gain insight on how the Admin SDK injects menus and pages into the Admin.`}</p>\n    <h2 {...{\n      \"id\": \"shared-contexts\"\n    }}>{`Shared contexts`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`sharedContext`}</inlineCode>{` constant is available only when a mass action, menu, or order view button performs a redirection to an iFrame page. For mass actions, `}<inlineCode parentName=\"p\">{`sharedContext`}</inlineCode>{` contains a set of selected IDs, the Commerce base URL, the client ID, and an IMS token, as shown below. For menus and order view buttons, `}<inlineCode parentName=\"p\">{`sharedContext`}</inlineCode>{` contains only an IMS token.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const sharedContext = {\n  selectedIds: array,\n  commerceBaseUrl: string,\n  imsToken: string,\n  clientId: string\n}\n`}</code></pre>\n    <p>{`In the following code example, the `}<inlineCode parentName=\"p\">{`getGuestConnection()`}</inlineCode>{` call uses a `}<inlineCode parentName=\"p\">{`sharedContext`}</inlineCode>{` to retrieve a list of selected IDs. The `}<inlineCode parentName=\"p\">{`extensionId`}</inlineCode>{` must match the ID used to register the app in the `}<inlineCode parentName=\"p\">{`ExtensionRegistration.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const getGuestConnection = async () => {\n    return await attach({\n        id: extensionId\n   })\n}\n    \ngetGuestConnection().then((guestConnection) => {\n  guestConnection.sharedContext.get('selectedIds')\n})\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` parameter for a `}<inlineCode parentName=\"p\">{`productMassAction`}</inlineCode>{` specifies where to redirect the mass action UI.`}</p>\n    <h2 {...{\n      \"id\": \"mass-actions-without-iframes\"\n    }}>{`Mass actions without iFrames`}</h2>\n    <p>{`When a mass action `}<inlineCode parentName=\"p\">{`displayIframe`}</inlineCode>{` parameter is set to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`, you must account for additional factors.`}</p>\n    <h3 {...{\n      \"id\": \"mass-action-request-headers\"\n    }}>{`Mass action request headers`}</h3>\n    <p>{`Use the following request headers when you perform a mass action without implementing an iFrame.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`X-Request-ID`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A unique UUID v4 generated when the request is sent as a unique identifier.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Content-Type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The request content type is `}<inlineCode parentName=\"td\">{`application/json`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Accept`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The request accepts a response type of `}<inlineCode parentName=\"td\">{`application/json`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Authorization`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The request is authenticated using an IMS token generated for the organization attached to the Commerce instance.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`x-gw-ims-org-id`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The organization ID.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"application-failures\"\n    }}>{`Application failures`}</h3>\n    <p>{`Commerce expects application responses to contain the error status and message.\nCommerce logs the error and displays an error banner notification to the user.`}</p>\n    <h3 {...{\n      \"id\": \"connection-interruption-failures\"\n    }}>{`Connection interruption failures`}</h3>\n    <p>{`By default, Commerce waits 10 seconds for a response, though the extension point can customize this value.\nWhen the timeout is reached, Commerce:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Logs a 408 timeout status and error message.`}</li>\n      <li parentName=\"ul\">{`Displays an error banner notification.`}</li>\n      <li parentName=\"ul\">{`Sends the `}<inlineCode parentName=\"li\">{`admin_ui_sdk_mass_action_request_failed`}</inlineCode>{` event. The application can subscribe to this event to take action, such as rolling back updates in Commerce.`}</li>\n    </ul>\n    <p>{`The application can access details of the failed request using the `}<inlineCode parentName=\"p\">{`GET V1/adminuisdk/massaction/<requestId>`}</inlineCode>{` REST API. The token used to authenticate the request must have access to the Admin UI SDK. The call returns an error message if the request ID was not found or if it associated with a successful action.`}</p>\n    <h3 {...{\n      \"id\": \"recommendations\"\n    }}>{`Recommendations`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Use bulk update in Commerce to avoid inconsistency issues in case of failures.`}</li>\n      <li parentName=\"ul\">{`Event and REST API responses contain the list of selected IDs for a request. It is the application's responsibility to monitor updates or failures in Commerce.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}