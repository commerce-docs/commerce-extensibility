{"version":3,"file":"component---src-pages-starter-kit-structure-md-a6badc7d84bc05138b44.js","mappings":"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","sources":["webpack://commerce-extensibility/./src/pages/starter-kit/structure.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"starter-kit-structure\"\n    }}>{`Starter kit structure`}</h1>\n    <p>{`The Adobe Commerce integration starter kit provides boilerplate code to synchronize the following entities across systems:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Customer`}</li>\n      <li parentName=\"ul\">{`Customer Group`}</li>\n      <li parentName=\"ul\">{`Order`}</li>\n      <li parentName=\"ul\">{`Product`}</li>\n      <li parentName=\"ul\">{`Shipment`}</li>\n      <li parentName=\"ul\">{`Stock`}</li>\n    </ul>\n    <p>{`By default, object synchronization is bi-directional. Changes in Commerce are propagated to the external backoffice application and vice versa.`}</p>\n    <p>{`The source code follows the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/guides/extensions/extension_migration_guide/#old-file-structure\"\n      }}>{`file structure`}</a>{` of a typical App Builder application. Most importantly, the `}<inlineCode parentName=\"p\">{`actions`}</inlineCode>{` directory contains the source code for all the serverless actions.`}</p>\n    <p>{`The following diagram shows the directory structure of the starter kit project:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tree\"\n      }}>{`|__ root\n|   |__ actions\n|   |   |__ <entity>\n|   |   |   |__ commerce\n|   |   |   |   |__ consumer\n|   |   |   |   |__ <action>\n|   |   |   |__ external\n|   |   |   |   |__ consumer\n|   |   |   |   |__ <action>\n|   |   |__ ingestion\n|   |   |   |__ webhook\n|   |   |__ webhook\n|   |   |   |__ <action>\n|   |__ scripts\n|   |   |__ commerce-event-subscribe\n|   |   |__ onboarding\n|   |__ test\n|   |__ utils\n`}</code></pre>\n    <p>{`The most important directories and files are described below.`}</p>\n    <h3 {...{\n      \"id\": \"actions-directory\"\n    }}><inlineCode parentName=\"h3\">{`actions`}</inlineCode>{` directory`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`actions`}</inlineCode>{` directory has the following subdirectories:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ingestion`}</inlineCode>{` - contains the source code for an alternative events ingestion endpoint.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webhook`}</inlineCode>{` - contains the source for synchronous webhooks that can be called from Commerce.`}</li>\n      <li parentName=\"ul\">{`Separate directories for each entity to be synchronized, including `}<inlineCode parentName=\"li\">{`customer`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`order`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`product`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Each entity directory has `}<inlineCode parentName=\"p\">{`commerce`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`external`}</inlineCode>{` subdirectories. The `}<inlineCode parentName=\"p\">{`commerce`}</inlineCode>{` directory contains the runtime actions responsible for handling incoming events from Commerce and synchronizing the data with the 3rd-party external system. The `}<inlineCode parentName=\"p\">{`external`}</inlineCode>{` directory defines the runtime actions that handle incoming events from the external system and updates entities in Commerce.`}</p>\n    <p>{`The contents of the `}<inlineCode parentName=\"p\">{`commerce`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`external`}</inlineCode>{` directories are similar. Each contains`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`consumer`}</inlineCode>{` directory. This directory contains the code for the runtime action that routes incoming events to the action responsible for handling each event.`}</li>\n      <li parentName=\"ul\">{`One or more directories that are named after an action, such as `}<inlineCode parentName=\"li\">{`created`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`deleted`}</inlineCode>{`, and other actions that are appropriate for the entity. Each of these directories contains the code for the runtime action responsible for handling one particular event.`}</li>\n      <li parentName=\"ul\">{`An `}<inlineCode parentName=\"li\">{`actions.config.yaml`}</inlineCode>{` file. This file declares the runtime actions responsible for handling the events for an entity originating in Commerce or the external system.`}</li>\n    </ul>\n    <p>{`Individual directories that define actions contain the following files:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`File`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Purpose`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`index.js`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Contains the main method that gets invoked when handling an event. It is responsible for coordinating the different activities involved in that handling, such as validating the incoming payload, transforming the payload to the target API, and interacting with the target API.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`pre.js`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`post.js`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provide convenient extension points to introduce custom business logic before and after interacting with the target API.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`sender.js`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Implements the logic to interact with the target API so that the changes are propagated. For actions in the `}<inlineCode parentName=\"td\">{`external`}</inlineCode>{` directory, Commerce APIs are the target. Actions in the `}<inlineCode parentName=\"td\">{`commerce`}</inlineCode>{` directory target external APIs.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`schema.json`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(`}<inlineCode parentName=\"td\">{`external`}</inlineCode>{` directories only) Defines the schema to be validated against the incoming event payload.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`transformer.js`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Implements the logic to transform the incoming event payload to make it suitable for the target API being called to propagate the changes.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`validator.js`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Implements the logic to validate the incoming event payload.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"scriptsonboarding-directory\"\n    }}><inlineCode parentName=\"h3\">{`scripts/onboarding`}</inlineCode>{` directory`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`onboarding`}</inlineCode>{` directory contains the scripting needed to install and set up the starter kit. The `}<inlineCode parentName=\"p\">{`scripts/onboarding/config/starter-kit-registrations.json`}</inlineCode>{` configuration file creates all the registrations for all entities that are present in the repo's `}<inlineCode parentName=\"p\">{`app.config.yaml`}</inlineCode>{` file. You can edit this file to remove any unnecessary Commerce or back office registrations. `}<a parentName=\"p\" {...{\n        \"href\": \"./create-integration.md#onboarding\"\n      }}>{`Onboarding`}</a>{` describes the installation process.`}</p>\n    <h3 {...{\n      \"id\": \"scriptscommerce-event-subscribe-directory\"\n    }}><inlineCode parentName=\"h3\">{`scripts/commerce-event-subscribe`}</inlineCode>{` directory`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`commerce-event-subscribe`}</inlineCode>{` directory contains the script to subscribe the Commerce event provider, which was created during onboarding, to the Commerce events. The `}<inlineCode parentName=\"p\">{`scripts/onboarding/config/starter-kit-registrations.json`}</inlineCode>{` configuration file contains all the Commerce events you want subscribe to. Edit this file to add, remove, or modify the events necessary for your project. `}<a parentName=\"p\" {...{\n        \"href\": \"./create-integration.md#onboarding\"\n      }}>{`Onboarding`}</a>{` describes the installation process.`}</p>\n    <h3 {...{\n      \"id\": \"test-directory\"\n    }}><inlineCode parentName=\"h3\">{`test`}</inlineCode>{` directory`}</h3>\n    <p>{`The starter kit provides unit tests for most of the included runtime actions. These tests are in the `}<inlineCode parentName=\"p\">{`test/actions`}</inlineCode>{` directory. You can also find unit tests for the onboarding script in the `}<inlineCode parentName=\"p\">{`test/onboarding`}</inlineCode>{` directory.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/resources/barcode-reader/test/\"\n      }}>{`Testing a Serverless Action`}</a>{` provides details about unit testing.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}