{"version":3,"file":"component---src-pages-admin-ui-sdk-app-registration-md-4778d2ec209df3ee9d66.js","mappings":"wSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBACH,wBACL,kBAAK,8MACL,eACE,GAAM,qCACH,sBAAoB,uBAAYC,WAAW,MAAO,eAA4B,UACnF,kBAAK,cAAY,uBAAYA,WAAW,KAAM,eAA4B,uCAC1E,kBAAK,qCAAmC,uBAAYA,WAAW,KAAM,oBAAiC,MAAI,uBAAYA,WAAW,KAAM,2BACvI,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,6MAUP,eACE,GAAM,oDACH,yBAAuB,uBAAYA,WAAW,MAAO,2BAAwC,UAClG,kBAAK,kCAAgC,uBAAYA,WAAW,KAAM,2BAAwC,kDAC1G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,sOASP,eACE,GAAM,0CACH,WAAS,uBAAYA,WAAW,MAAO,yBAAsC,eAClF,kBAAK,cAAY,uBAAYA,WAAW,KAAM,yBAAsC,wFAAsF,uBAAYA,WAAW,KAAM,iBAA8B,cAAY,uBAAYA,WAAW,KAAM,mBAAgC,qBAAmB,cAAGA,WAAW,IAC3U,KAAQ,gEACL,oCAAwC,2CAC/C,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,YAAU,uBAAYA,WAAW,KAAM,aAA0B,uBAAqB,uBAAYA,WAAW,KAAM,gBAA6B,MACrK,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,qCAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,QAAM,uBAAYA,WAAW,KAAM,eAA4B,MACpF,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,oBAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,cAAY,uBAAYA,WAAW,KAAM,4BAAyC,sBACvG,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,uBACV,2UAqBX,kBAAK,0BAAwB,uBAAYA,WAAW,KAAM,WAAwB,gGAA8F,cAAGA,WAAW,IAC1L,KAAQ,6BACL,oBAAwB,kDAC/B,eACE,GAAM,4BACH,eAAa,uBAAYA,WAAW,MAAO,UAAuB,aACvE,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,UAAuB,qDAC3F,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,yEAEP,kBAAK,uHAAqH,uBAAYA,WAAW,KAAM,UAAuB,gBAC9K,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,8aAWP,eACE,GAAM,iCACH,eAAa,uBAAYA,WAAW,MAAO,mBAAgC,UAChF,kBAAK,eAAa,uBAAYA,WAAW,KAAM,mBAAgC,KAAG,cAAGA,WAAW,IAC5F,KAAQ,sEACL,sBAA0B,iBACjC,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,4EAIP,kBAAK,0DAAwD,uBAAYA,WAAW,KAAM,mBAAgC,WAC1H,eACE,GAAM,mCACH,sBAAoB,uBAAYA,WAAW,MAAO,qBACvD,kBAAK,6DACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,qMAYP,kBAAK,sDAGT,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-extensibility/./src/pages/admin-ui-sdk/app-registration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"app-ui-registration\"\n    }}>{`App UI registration`}</h1>\n    <p>{`Your app must be correctly configured with Adobe App Registry to use the Admin UI SDK to create a custom UI in Commerce. You must perform the following steps before submitting your app to be published.`}</p>\n    <h2 {...{\n      \"id\": \"add-or-update-the-installyml-file\"\n    }}>{`Add or update the `}<inlineCode parentName=\"h2\">{`install.yml`}</inlineCode>{` file`}</h2>\n    <p>{`Create an `}<inlineCode parentName=\"p\">{`install.yml`}</inlineCode>{` file in the root of your project.`}</p>\n    <p>{`Make sure you target the correct `}<inlineCode parentName=\"p\">{`extensionPointId`}</inlineCode>{`: `}<inlineCode parentName=\"p\">{`commerce/backend-ui/1`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`$schema: http://json-schema.org/draft-07/schema\n$id: https://adobe.io/schemas/app-builder-templates/1\n\ncategories:\n  - action\n  - ui\n\nextensions:\n  - extensionPointId: commerce/backend-ui/1\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-or-update-the-extension-manifestjson-file\"\n    }}>{`Create or update the `}<inlineCode parentName=\"h2\">{`extension-manifest.json`}</inlineCode>{` file`}</h2>\n    <p>{`Create or update your project `}<inlineCode parentName=\"p\">{`extension-manifest.json`}</inlineCode>{` file so that it is similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"commerce-first-app\",\n  \"displayName\": \"Commerce First App on App Builder\",\n  \"description\": \"Commerce First App on App Builder\",\n  \"platform\": \"web\",\n  \"id\": \"commerce-first-app\",\n  \"version\": \"1.0.0\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-an-extensionregistration-component\"\n    }}>{`Add an `}<inlineCode parentName=\"h2\">{`ExtensionRegistration`}</inlineCode>{` component`}</h2>\n    <p>{`Create an `}<inlineCode parentName=\"p\">{`ExtensionRegistration`}</inlineCode>{` React component that registers the menu configuration in the App Registry. Use the `}<inlineCode parentName=\"p\">{`adobe/uix-sdk`}</inlineCode>{` with the `}<inlineCode parentName=\"p\">{`adobe-uix-guest`}</inlineCode>{` dependency. The `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/uix/docs/getting-started/design/\"\n      }}>{`UI Extensibility Getting Started`}</a>{` guide describes this process further.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the `}<inlineCode parentName=\"p\">{`uix-guest`}</inlineCode>{` dependency in the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`\"@adobe/uix-guest\": \"^0.8.3\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create an `}<inlineCode parentName=\"p\">{`ExtensionRegistration.js`}</inlineCode>{` file as follows:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`import { register } from '@adobe/uix-guest';\n\nexport default function ExtensionRegistration() {\n  init().catch(console.error);\n  return <></>;\n }\n\n const extensionId = 'commerce-first-app'\n \n const init = async () => {\n   await register({\n     id: extensionId,\n     methods: {\n       ...\n     }\n   }\n )\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`You must populate the `}<inlineCode parentName=\"p\">{`methods`}</inlineCode>{` section with calls to fetch menus, pages, and other entities to be displayed in the Admin. `}<a parentName=\"p\" {...{\n        \"href\": \"extension-points/index.md\"\n      }}>{`Extension Points`}</a>{` provides reference information and examples.`}</p>\n    <h2 {...{\n      \"id\": \"update-the-appjs-routing\"\n    }}>{`Update the `}<inlineCode parentName=\"h2\">{`App.js`}</inlineCode>{` routing`}</h2>\n    <p>{`Add the following route to your `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` file to define the correct routing to your app:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Route path={'index.html'} element={<ExtensionRegistration />} />\n`}</code></pre>\n    <p>{`Make sure that your main page is correctly routed to the index. Here is an example of the first app routing in the `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ErrorBoundary onError={onError} FallbackComponent={fallbackComponent}>\n  <BrowserRouter>\n      <Provider theme={lightTheme} colorScheme={'light'}>\n          <Routes>\n              <Route path={'index.html'} element={<ExtensionRegistration />} />\n              <Route index element={<MainPage runtime={props.runtime} ims={props.ims} />} />\n          </Routes>\n      </Provider>\n  </BrowserRouter>\n</ErrorBoundary>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-the-appconfigyaml-file\"\n    }}>{`Update the `}<inlineCode parentName=\"h2\">{`app.config.yaml`}</inlineCode>{` file`}</h2>\n    <p>{`Update the `}<inlineCode parentName=\"p\">{`app.config.yaml`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/guides/configuration/\"\n      }}>{`configuration file`}</a>{` as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`extensions:\n  commerce/backend-ui/1:\n    $include: ext.config.yaml\n`}</code></pre>\n    <p>{`This file now declares extensions and redirects to an `}<inlineCode parentName=\"p\">{`ext.config.yaml`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"add-or-update-the-extconfigyaml\"\n    }}>{`Add or update the `}<inlineCode parentName=\"h2\">{`ext.config.yaml`}</inlineCode></h2>\n    <p>{`Your extension configuration file should look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`operations:\n  view:\n    - type: web\n      impl: index.html\nactions: actions\nweb: web-src\nruntimeManifest:\n  packages:\n    SampleExtension:\n      license: Apache-2.0\n      actions:\n`}</code></pre>\n    <p>{`Complete this file with the actions from your app.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}