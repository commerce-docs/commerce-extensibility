{"version":3,"file":"component---src-pages-starter-kit-stock-md-78046d5081404fce6c3e.js","mappings":"wSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,oBACL,uBAAYC,WAAW,MAAO,SAAsB,eACvD,kBAAK,wKACL,kBAAK,2EACL,eACE,GAAM,0BACH,6BACL,kBAAK,0DACL,oBACE,eAAIA,WAAW,MAAO,mDAExB,kBAAK,kEACL,oBACE,eAAIA,WAAW,MAAO,4EAExB,eACE,GAAM,0BACH,6BACL,kBAAK,0DACL,oBACE,eAAIA,WAAW,MAAO,uCACtB,eAAIA,WAAW,MAAO,yFAExB,kBAAK,kEACL,oBACE,eAAIA,WAAW,MAAO,+CACtB,eAAIA,WAAW,MAAO,qFAExB,eACE,GAAM,gBACH,mBACL,kBAAK,0DACL,oBACE,eAAIA,WAAW,MAAO,yDACpB,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAO,kHAI5B,kBAAK,kEACL,oBACE,eAAIA,WAAW,MAAO,iCAA+B,mBAAQA,WAAW,MAAO,QAAiB,wCAChG,eAAIA,WAAW,MAAO,iDAA+C,mBAAQA,WAAW,MAAO,SAAkB,kBACjH,eAAIA,WAAW,MAAO,kCAAgC,mBAAQA,WAAW,MAAO,SAAkB,kBAIxG,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-extensibility/./src/pages/starter-kit/stock.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"stock-data-flow\"\n    }}><inlineCode parentName=\"h1\">{`stock`}</inlineCode>{` data flow`}</h1>\n    <p>{`This page describes the path that data takes as it travels between Adobe Commerce and your backoffice system when using the Adobe Commerce integration starter kit.`}</p>\n    <p>{`The following sections describe when events are fired for this object.`}</p>\n    <h2 {...{\n      \"id\": \"create-stock-hierarchy\"\n    }}>{`Create (stock hierarchy)`}</h2>\n    <p>{`Adobe Commerce supports the following create methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An admin or an API creates a new stock source`}</li>\n    </ul>\n    <p>{`Backoffice integrations support the following create methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An admin or an API creates a new stock source in the backoffice system`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"update-stock-hierarchy\"\n    }}>{`Update (stock hierarchy)`}</h2>\n    <p>{`Adobe Commerce supports the following update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Admin user modifies a stock source`}</li>\n      <li parentName=\"ul\">{`Admin user modifies the relationship between an existing stock source and a website`}</li>\n    </ul>\n    <p>{`Backoffice integrations support the following update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An admin modifies an existing stock source`}</li>\n      <li parentName=\"ul\">{`An admin modifies an existing relationship between a stock source and a website`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"update-stock\"\n    }}>{`Update (stock)`}</h2>\n    <p>{`Adobe Commerce supports the following update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An admin modifies a stock quantity in the Admin panel`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`For example, to overwrite the quantity quickly in a flash sale where overselling situations is acceptable.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`Backoffice integrations support the following update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A daily full sync triggers a `}<strong parentName=\"li\">{`FULL`}</strong>{` stock update for each stock source`}</li>\n      <li parentName=\"ul\">{`A change in source stock quantity triggers a `}<strong parentName=\"li\">{`DELTA`}</strong>{` stock update`}</li>\n      <li parentName=\"ul\">{`A stock allocation triggers a `}<strong parentName=\"li\">{`DELTA`}</strong>{` stock update`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}