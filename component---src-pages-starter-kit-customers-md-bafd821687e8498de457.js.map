{"version":3,"file":"component---src-pages-starter-kit-customers-md-bafd821687e8498de457.js","mappings":"wSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBACL,uBAAYC,WAAW,MAAO,YAAyB,eAC1D,kBAAK,wKACL,eACE,GAAM,mBACH,oBACL,kBAAK,0DACL,oBACE,eAAIA,WAAW,MAAO,sDACtB,eAAIA,WAAW,MAAO,wEACtB,eAAIA,WAAW,MAAO,+CAExB,kBAAK,kEACL,oBACE,eAAIA,WAAW,MAAO,iJAExB,eACE,GAAM,mBACH,oBACL,kBAAK,0DACL,oBACE,eAAIA,WAAW,MAAO,kDACtB,eAAIA,WAAW,MAAO,0HAExB,kBAAK,kEACL,oBACE,eAAIA,WAAW,MAAO,sIAExB,eACE,GAAM,+BACH,iCACL,kBAAK,iEACL,oBACE,eAAIA,WAAW,MAAO,qDAExB,kBAAK,yEACL,oBACE,eAAIA,WAAW,MAAO,oDAI5B,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-extensibility/./src/pages/starter-kit/customers.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"customer-data-flow\"\n    }}><inlineCode parentName=\"h1\">{`customer`}</inlineCode>{` data flow`}</h1>\n    <p>{`This page describes the path that data takes as it travels between Adobe Commerce and your backoffice system when using the Adobe Commerce integration starter kit.`}</p>\n    <h2 {...{\n      \"id\": \"customer-create\"\n    }}>{`Customer create`}</h2>\n    <p>{`Adobe Commerce supports the following create methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A shopper registers on the Create an Account page`}</li>\n      <li parentName=\"ul\">{`A shopper registers during or after purchase (sign up and purchase)`}</li>\n      <li parentName=\"ul\">{`An admin or an API creates a new customer`}</li>\n    </ul>\n    <p>{`Backoffice integrations support the following create methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A new or existing customer engages the company through sales, a partner, or a CRM, when records and emails are synched into Adobe Commerce.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"customer-update\"\n    }}>{`Customer update`}</h2>\n    <p>{`Adobe Commerce supports the following update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The customer edits information via My Account`}</li>\n      <li parentName=\"ul\">{`An admin user or process modifies existing customer information (including assignment to a different customer group)`}</li>\n    </ul>\n    <p>{`Backoffice integrations support the following update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An existing customer engages the company through sales, a partner, or a CRM (including assignment to a different customer group)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"customer-group-createupdate\"\n    }}>{`Customer group create/update`}</h2>\n    <p>{`Adobe Commerce supports the following create/update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An admin user creates or edits a customer group`}</li>\n    </ul>\n    <p>{`Backoffice integrations support the following create/update methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An admin user creates or edits a customer group`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}