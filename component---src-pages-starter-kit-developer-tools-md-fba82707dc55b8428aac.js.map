{"version":3,"file":"component---src-pages-starter-kit-developer-tools-md-fba82707dc55b8428aac.js","mappings":"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","sources":["webpack://commerce-extensibility/./src/pages/starter-kit/developer-tools.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"developer-tools\"\n    }}>{`Developer tools`}</h1>\n    <p>{`The following sections describe development tools and processes available in the starter kit.`}</p>\n    <h2 {...{\n      \"id\": \"parameters-as-environment-variables\"\n    }}>{`Parameters as environment variables`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`actionparams`}</inlineCode>{` object allows you to pass values from your environment variables to an action. Add the parameter to your `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file:`}</p>\n    <p><inlineCode parentName=\"p\">{`YOUR_PARAM=your_value`}</inlineCode></p>\n    <p>{`To pass the parameters to the action, add the parameter as an `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` under the corresponding action in the `}<inlineCode parentName=\"p\">{`actions/{entity}/../actions.config.yaml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`{action name}:\n  function: {action name}/index.js\n  web: 'no'\n  runtime: nodejs:16\n  inputs:\n    LOG_LEVEL: debug\n    YOUR_PARAM: $YOUR_PARAM\n  annotations:\n    require-adobe-auth: true\n    final: true\n`}</code></pre>\n    <p>{`This parameter is now accessible in the `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function main(params) {\n  params.YOUR_PARAM\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"logging\"\n    }}>{`Logging`}</h2>\n    <p>{`Application logs allow developers to debug an application in development as well as monitor it in production. By default, the starter kit uses the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-sdk\"\n      }}>{`Adobe I/O SDK`}</a>{` to store logs in Adobe I/O Runtime. You can find additional details in `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/guides/application_logging/\"\n      }}>{`Managing Application Logs`}</a>{`.`}</p>\n    <p>{`Alternatively, the application logs can be forwarded to a customer-owned log management solution. Use `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/guides/application_logging/#when-to-use-log-forwarding\"\n      }}>{`When to use Log Forwarding`}</a>{` to inform your decision when choosing to store logs in Adobe I/O Runtime or forward them to a log management platform.`}</p>\n    <p>{`If you are using Adobe Commerce on Cloud Infrastructure, you have access to a New Relic instance. `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/guides/application_logging/new_relic/\"\n      }}>{`Forwarding Logs to New Relic`}</a>{` page describes the process necessary to configure starter kit to forward logs to New Relic.`}</p>\n    <h3 {...{\n      \"id\": \"hiding-secrets-in-logs\"\n    }}>{`Hiding secrets in logs`}</h3>\n    <p><inlineCode parentName=\"p\">{`stringParameters`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`./actions/utils.js`}</inlineCode>{` file can help you prevent exposing secrets when logging the parameters received by a runtime action. It replaces the authorization header value with `}<inlineCode parentName=\"p\">{`<hidden>`}</inlineCode>{` and any parameters containing a term present in the hidden array with `}<inlineCode parentName=\"p\">{`<hidden>`}</inlineCode>{`.`}</p>\n    <p>{`By default, the following parameters are hidden:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const hidden = [\n  'secret',\n  'token'\n]\n`}</code></pre>\n    <p>{`Adjust these values to hide any secrets you want to pass as `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` to your runtime actions.`}</p>\n    <h2 {...{\n      \"id\": \"testing\"\n    }}>{`Testing`}</h2>\n    <p>{`The starter kit provides unit tests for most of the predefined runtime actions. These tests are located in the `}<inlineCode parentName=\"p\">{`./test/actions`}</inlineCode>{` folder.`}</p>\n    <p>{`Additionally, unit tests for the onboarding script can be found in the `}<inlineCode parentName=\"p\">{`.test/scripts`}</inlineCode>{` folder.`}</p>\n    <p>{`For more details about unit testing, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/resources/barcode-reader/test/\"\n      }}>{`Testing a Serverless Action`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"create-or-modify-an-event\"\n    }}>{`Create or modify an event`}</h2>\n    <p>{`The starter kit comes with predefined events for each entity. If you need to add a new event to an entity or modify an existing one, use the following steps.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the event to the `}<inlineCode parentName=\"p\">{`scripts/onboarding/config/events.json`}</inlineCode>{` file under the corresponding entity. For example, if the event is related to a customer and is coming from commerce, you should add it under the `}<inlineCode parentName=\"p\">{`customer`}</inlineCode>{` entity in the `}<inlineCode parentName=\"p\">{`commerce`}</inlineCode>{` section. To modify an existing event, edit the event in the corresponding section of the `}<inlineCode parentName=\"p\">{`./onboarding/config/events.json`}</inlineCode>{` file.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`    \"customer\": {\n      \"commerce\": [\n        \"com.adobe.commerce.observer.customer_save_commit_after\",\n        \"com.adobe.commerce.observer.customer_delete_commit_after\",\n        \"com.adobe.commerce.observer.customer_group_save_commit_after\",\n        \"com.adobe.commerce.observer.customer_group_delete_commit_after\",\n        \"com.adobe.commerce.THE_NEW_CUSTOMER_EVENT\"\n      ],\n    ...\n    }\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the onboarding script:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm run onboard\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<inlineCode parentName=\"p\">{`action/{entity}/{flow}`}</inlineCode>{` directory, add or modify the action that will handle this event, such as `}<inlineCode parentName=\"p\">{`actions/customer/commerce/NEW_OPERATION/index.js`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the newly created operation action to the `}<inlineCode parentName=\"p\">{`action/{entity}/{flow}/actions.config.yaml`}</inlineCode>{` config file or edit the existing action flow.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`NEW_OPERATION:\n  function: NEW_OPERATION/index.js\n  web: 'no'\n  runtime: nodejs:16\n  inputs:\n    LOG_LEVEL: debug\n  annotations:\n    require-adobe-auth: true\n    final: true\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a new `}<inlineCode parentName=\"p\">{`case`}</inlineCode>{` to the switch statement in the consumer of the entity flow `}<inlineCode parentName=\"p\">{`action/{entity}/{flow}`}</inlineCode>{` or edit the existing `}<inlineCode parentName=\"p\">{`case`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`  case 'com.adobe.commerce.observer.NEW_CUSTOMER_EVENT': {\n    logger.info('Invoking NEW OPERATION')\n    const res = await openwhiskClient.invokeAction('customer-commerce/NEW_OPERATION', params.data.value)\n    response = res?.response?.result?.body\n    statusCode = res?.response?.result?.statusCode\n    break\n  }\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Deploy the changes:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`\\`aio app deploy\\`\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`After completing this process, you can consume the new or updated event.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}