{"version":3,"file":"component---src-pages-webhooks-hooks-md-79ecaea42e7395b8af72.js","mappings":"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","sources":["webpack://commerce-extensibility/./src/pages/webhooks/hooks.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"configure-hooks\"\n    }}>{`Configure hooks`}</h1>\n    <p>{`A hook defines a request to a remote server. The `}<inlineCode parentName=\"p\">{`hook`}</inlineCode>{` element of the `}<inlineCode parentName=\"p\">{`webhooks.xml`}</inlineCode>{` file describes the communication parameters, including the URL of the remote service to execute, HTTP method, and timeout information. Additional configuration occurs within the `}<inlineCode parentName=\"p\">{`headers`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`fields`}</inlineCode>{` elements. Each individual `}<inlineCode parentName=\"p\">{`header`}</inlineCode>{` element defines an HTTP header key/value pair, while the individual `}<inlineCode parentName=\"p\">{`field`}</inlineCode>{` elements define what data is transmitted to the external server.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"xml-schema.md\"\n      }}>{`webhook configuration reference`}</a>{` describes each element in detail.`}</p>\n    <h2 {...{\n      \"id\": \"define-the-connection\"\n    }}>{`Define the connection`}</h2>\n    <p>{`The following hook definition includes the hook name, the destination URL, and timeout information. The `}<inlineCode parentName=\"p\">{`fallbackErrorMessage`}</inlineCode>{` will be written to the error log and can be displayed on the storefront.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<hook name=\"validate_stock\" url=\"{env:APP_VALIDATE_STOCK_URL}/product-validate-stock\"\ntimeout=\"2000\" softTimeout=\"200\" fallbackErrorMessage=\"Can't add the product to the cart right now\">\\`\n`}</code></pre>\n    <p>{`The hook URL is formed by concatenating the `}<inlineCode parentName=\"p\">{`APP_VALIDATE_STOCK_URL`}</inlineCode>{` environment variable and the partial path `}<inlineCode parentName=\"p\">{`/product-validate-stock`}</inlineCode>{`. This practice is useful for developing in different environments, such as those for staging and production, where the hook URLs are different.`}</p>\n    <h2 {...{\n      \"id\": \"define-request-headers\"\n    }}>{`Define request headers`}</h2>\n    <p>{`You will typically need to send authorization tokens and other connection parameters in the headers of your remote request. Secrets and other sensitive data should not be stored in the `}<inlineCode parentName=\"p\">{`webhooks.xml`}</inlineCode>{` file. Instead, use environment or configuration variables to relay this information.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<hook name=\"validate_stock\" url=\"{env:APP_VALIDATE_STOCK_URL}/product-validate-stock\" timeout=\"2000\" softTimeout=\"200\" required=\"true\" fallbackErrorMessage=\"Can't add the product to the cart right now\">\n    <headers>\n        <header name=\"Authorization\">Bearer: {env:APP_VALIDATE_STOCK_AUTHORIZATION_TOKEN}</header>\n        <header name=\"api-key\">{config:path/to/api-key}</header>\n    </headers>\n</hook>\n`}</code></pre>\n    <p>{`This example defines two headers:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Authorization`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Bearer:`}</inlineCode>{` and the value of the `}<inlineCode parentName=\"td\">{`APP_VALIDATE_STOCK_AUTHORIZATION_TOKEN`}</inlineCode>{` environment variable.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`api-key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value from the Adobe Commerce configuration to the file containing the key (`}<inlineCode parentName=\"td\">{`path/to/api-key`}</inlineCode>{`).`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"dynamic-header-resolvers\"\n    }}>{`Dynamic header resolvers`}</h3>\n    <p>{`Instead of storing secrets that expire in environment variables, you can create a dynamic header resolver to manage these values. To create your own resolver, define a new class that implements `}<inlineCode parentName=\"p\">{`Magento\\\\AdobeCommerceWebhooks\\\\Model\\\\HeaderResolverInterface`}</inlineCode>{`, as shown below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\ndeclare(strict_types=1);\n \nnamespace Magento\\\\WebhookModule\\\\Model;\n\n...\n \nclass AddProductToCartResolver implements HeaderResolverInterface\n{\n    public function __construct(\n        private TokenGenerator $tokenGenerator,\n        private CustomConfig $customConfig,\n    ) {\n    }\n \n    /**\n     *  Returns an array of custom headers\n     * \n     * @return array\n     */\n    public function getHeaders(): array\n    {\n        return [\n            'Authorization' => 'Bearer ' . $this->tokenGenerator->getToken(),\n            'Api-key' => $this->customConfig->getApiKey(),\n            'secret-key' => $this->customConfig->getSecretKey(),\n        ];    \n    }\n}\n`}</code></pre>\n    <p>{`Point to the `}<inlineCode parentName=\"p\">{`AddProductToCartResolver`}</inlineCode>{` class in the `}<inlineCode parentName=\"p\">{`header.resolver`}</inlineCode>{` attribute.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<hook name=\"validate_stock\" url=\"{env:APP_VALIDATE_STOCK_URL}/product-validate-stock\" timeout=\"2000\" softTimeout=\"200\" required=\"true\" fallbackErrorMessage=\"Can't add the product to the cart right now\">\n    <headers>\n        <header resolver=\"Magento\\\\WebhookModule\\\\Model\\\\AddProductToCartResolver\" />\n    </headers>\n</hook>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"define-the-hook-body\"\n    }}>{`Define the hook body`}</h2>\n    <p>{`The payload for a hook can be large, but in many cases you only need to transmit a few fields to perform the desired operation on the remote server.`}</p>\n    <p>{`Defining the hook requires knowledge of the structure of the original event and the requirements of the remote call. You can use the `}<inlineCode parentName=\"p\">{`bin/magento [webhooks:info](commands.md#display-the-payload-of-a-webhook) <webhook-name>`}</inlineCode>{` command to return the default payload of a webhook.`}</p>\n    <p>{`Imagine that the command returned a Commerce webhook with the following structure:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"data\": {\n        \"product\": {\n            \"name\": \"string\",\n            \"sku\": \"string\",\n            \"qty\": \"float\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`The webhook contains a top-level `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` object, and a second-level `}<inlineCode parentName=\"p\">{`product`}</inlineCode>{` object with several fields. However, your remote application expects a payload with the following structure:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"product\": {\n        \"name\": \"string\",\n        \"sku\": \"string\",\n        \"quantity\": \"float\"\n    }\n}\n`}</code></pre>\n    <p>{`To transmit this object to the remote application, you will need to remove the `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` object from the payload and rename `}<inlineCode parentName=\"p\">{`qty`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`quantity`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`source`}</inlineCode>{` configuration attribute specifies the full path of a Commerce webhook field, while the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` attribute defines the full path of the field to transmit. If the two values are identical, then you can omit the `}<inlineCode parentName=\"p\">{`source`}</inlineCode>{` attribute.`}</p>\n    <p>{`The following example configures the webhook described above.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<hook name=\"validate_stock\" url=\"https://example.com/product-validate-stock\" timeout=\"2000\" softTimeout=\"200\" required=\"true\" fallbackErrorMessage=\"Can't add the product to the cart right now\">\n    <fields>\n        <field name='product.name' source='data.product.name' />\n        <field name='product.sku' source='data.product.sku' />\n        <field name='product.quantity' source='data.product.qty' />\n    </fields>\n</hook>\n`}</code></pre>\n    <p>{`If the default payload of a webhook contains an array of objects, use the following construction to select fields from that array:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`<object_name>[].<field_name>\n`}</code></pre>\n    <p>{`For example, the payload of the `}<inlineCode parentName=\"p\">{`plugin.magento.quote.api.shipment_estimation.estimate_by_extended_address`}</inlineCode>{` event contains a top-level `}<inlineCode parentName=\"p\">{`results[]`}</inlineCode>{` array. The array contains details about two individual shipping estimates.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"subject\": [],\n    \"result\": [\n        {\n            \"carrier_code\": \"tablerate\",\n            \"method_code\": \"bestway\",\n            \"carrier_title\": \"Best Way\",\n            \"method_title\": \"Table Rate\",\n            \"amount\": 15,\n            \"base_amount\": 15,\n            \"available\": true,\n            \"error_message\": \"\",\n            \"price_excl_tax\": 15,\n            \"price_incl_tax\": 15\n        },\n        {\n            \"carrier_code\": \"flatrate\",\n            \"method_code\": \"flatrate\",\n            \"carrier_title\": \"Flat Rate\",\n            \"method_title\": \"Fixed\",\n            \"amount\": 20,\n            \"base_amount\": 20,\n            \"available\": true,\n            \"error_message\": \"\",\n            \"price_excl_tax\": 20,\n            \"price_incl_tax\": 20\n        }\n    ],\n    \"cartId\": \"21\",\n    \"address\": {\n        \"street\": \"123 Test Road\",\n        \"city\": \"Test City\",\n        \"region_id\": 12,\n        \"region\": \"California\",\n        \"country_id\": \"US\",\n        \"postcode\": \"90000\",\n        \"firstname\": \"Test\",\n        \"lastname\": \"Test\",\n        \"company\": \"\",\n        \"telephone\": \"1800000000\",\n        \"save_in_address_book\": 1,\n        \"region_code\": \"CA\",\n        \"extension_attributes\": []\n    }\n}\n`}</code></pre>\n    <p>{`To transmit the `}<inlineCode parentName=\"p\">{`postcode`}</inlineCode>{` property of the `}<inlineCode parentName=\"p\">{`address`}</inlineCode>{` object and the `}<inlineCode parentName=\"p\">{`carrier_code`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`method_code`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`base_amount`}</inlineCode>{` for each shipping estimate, configure the webhook's fields as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fields>\n    <field name='postcode' source='address.postcode' />\n    <field name='result[].carrier_code' />\n    <field name='result[].method_code' />\n    <field name='result[].base_amount' />\n</fields>\n`}</code></pre>\n    <p>{`Commerce sends the following object to the remote application:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"postcode\": \"90000\",\n    \"result\": [\n        {\n            \"carrier_code\": \"tablerate\",\n            \"method_code\": \"bestway\",\n            \"base_amount\": 15\n        },\n        {\n            \"carrier_code\": \"flatrate\",\n            \"method_code\": \"flatrate\",\n            \"base_amount\": 20\n        }\n    ]\n}\n`}</code></pre>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Some sensitive data, such as passwords, can be sanitized in the webhook payload due to security concerns.`}</p>\n    <h3 {...{\n      \"id\": \"field-converters\"\n    }}>{`Field converters`}</h3>\n    <p>{`You can implement a converter class to convert a field to a different data type. For example, Commerce stores order IDs as numeric values. If the hook endpoint expects order IDs to be text values, you must convert the numeric value to a string representation before sending the payload.`}</p>\n    <p>{`All converter classes must implement `}<inlineCode parentName=\"p\">{`Magento\\\\AdobeCommerceWebhooks\\\\Model\\\\Filter\\\\Converter\\\\FieldConverterInterface`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`toExternalFormat`}</inlineCode>{` method of a converter class converts a field value before sending a request to the hook endpoint.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fields>\n    <field name='order.id' source='data.order.id' />\n    <field name='order.status' source='data.order.status' converter=\"Path/To/The/Converter/Class\" />\n</fields>\n`}</code></pre>\n    <p>{`A converter class can also convert the value in a hook endpoint response object that has an operation status of  `}<inlineCode parentName=\"p\">{`replace`}</inlineCode>{`. A value in a `}<inlineCode parentName=\"p\">{`replace`}</inlineCode>{` response object will be converted only if the path in the object corresponds to the source of a field with a configured converter class.`}</p>\n    <p>{`For example, given the above hook field configuration, conversion occurs only if a `}<inlineCode parentName=\"p\">{`replace`}</inlineCode>{` response object specifies a path of `}<inlineCode parentName=\"p\">{`data/order/status`}</inlineCode>{`. In this case, the `}<inlineCode parentName=\"p\">{`fromExternalFormat`}</inlineCode>{` method of the configured converter class will be called to convert the value in the response object.`}</p>\n    <h3 {...{\n      \"id\": \"context-fields\"\n    }}>{`Context fields`}</h3>\n    <p>{`You can add to the webhook payload values from the application context:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fields>\n    <field name=\"customer.entity_id\" source=\"data.customer.entity_id\" />\n    <field name=\"customer.customer_email\" source=\"context_customer_session.get_customer.get_email\" />\n</fields>\n`}</code></pre>\n    <p>{`In this example, the value of `}<inlineCode parentName=\"p\">{`customer.customer_email`}</inlineCode>{` will be set to `}<inlineCode parentName=\"p\">{`Magento\\\\Customer\\\\Model\\\\Session::getCustomer()::getEmail()`}</inlineCode>{`. If the value does not exist or cannot be processed, the appropriate message will be logged, and the hook execution will not be interrupted.`}</p>\n    <p>{`You can also specify the string arguments to use when accessing the application context. Provide these arguments within curly braces and delimit multiple arguments with colons, if applicable. The following example sets `}<inlineCode parentName=\"p\">{`config_value`}</inlineCode>{` to the value of `}<inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\App\\\\Config\\\\ScopeConfigInterface::getValue('value/path', 'default')`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fields>\n    <field name=\"config_value\" source=\"context_scope_config.get_value{value/path:default}\" />\n</fields>\n`}</code></pre>\n    <p>{`Supported contexts:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Context`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Context class`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`context_checkout_session`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Magento\\\\Checkout\\\\Model\\\\Session`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`context_customer_session`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Magento\\\\Customer\\\\Model\\\\Session`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`context_registry`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Magento\\\\Framework\\\\Registry`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`context_application_state`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Magento\\\\Framework\\\\App\\\\State`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`context_scope_config`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Magento\\\\Framework\\\\App\\\\Config\\\\ScopeConfigInterface`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`context_http_request`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Magento\\\\Framework\\\\App\\\\Request\\\\Http`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`context_staging`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Magento\\\\Staging\\\\Model\\\\VersionManager`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"clean-the-cache\"\n    }}>{`Clean the cache`}</h2>\n    <p>{`If you are adding webhook functionality to an instance that is in production mode, run the following command to clean the cache and make the webhook available to the system:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento cache:clean config\n`}</code></pre>\n    <p>{`If the instance is in developer mode, these configuration changes are detected automatically.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}